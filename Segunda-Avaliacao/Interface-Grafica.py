# -*- coding: utf-8 -*-
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

# Autor: Matheus Gonçalves Stigger

from PyQt5 import QtCore, QtGui, QtWidgets
import mysql.connector as mc
from PyQt5.QtWidgets import QTableWidgetItem


class Ui_MainWindow(object):

    def botao10(self):
        try:
            mydb = mc.connect(host="localhost",user="root",password="xxxxxxxxx",database="bancodedados")
            mycursor = mydb.cursor()
            mycursor.execute("SELECT data, hora, CONCAT(cpu_percent, ' %') FROM datahora INNER JOIN cpu ON datahora.id = cpu.id")
            result = mycursor.fetchall()
            self.tableWidget.setRowCount(0)
            for row_number, row_data in enumerate(result):
                self.tableWidget.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                    self.tableWidget.setItem(row_number, column_number, QTableWidgetItem(str(data)))
        except mc.Error as e:
            print("Error")

    def botao6(self):
        try:
            mydb = mc.connect(host="localhost",user="root",password="xxxxxxxxx",database="bancodedados")
            mycursor = mydb.cursor()
            mycursor.execute("SELECT data, hora, CONCAT(memory_percent, ' %') FROM datahora INNER JOIN memory ON datahora.id = memory.id")
            result = mycursor.fetchall()
            self.tableWidget.setRowCount(0)
            for row_number, row_data in enumerate(result):
                self.tableWidget.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                    self.tableWidget.setItem(row_number, column_number, QTableWidgetItem(str(data)))
        except mc.Error as e:
            print("Error")

    def botao17(self):
        try:
            mydb = mc.connect(host="localhost",user="root",password="xxxxxxxxx",database="bancodedados")
            mycursor = mydb.cursor()
            mycursor.execute("SELECT data, hora, CONCAT(cpu_mhz, ' MHz') FROM datahora INNER JOIN cpu ON datahora.id = cpu.id")
            result = mycursor.fetchall()
            self.tableWidget.setRowCount(0)
            for row_number, row_data in enumerate(result):
                self.tableWidget.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                    self.tableWidget.setItem(row_number, column_number, QTableWidgetItem(str(data)))
        except mc.Error as e:
            print("Error")

    def botao31(self):
        try:
            mydb = mc.connect(host="localhost",user="root",password="xxxxxxxxx",database="bancodedados")
            mycursor = mydb.cursor()
            mycursor.execute("SELECT data, hora, CONCAT(disk_percent, ' %') FROM datahora INNER JOIN disk ON datahora.id = disk.id")
            result = mycursor.fetchall()
            self.tableWidget.setRowCount(0)
            for row_number, row_data in enumerate(result):
                self.tableWidget.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                    self.tableWidget.setItem(row_number, column_number, QTableWidgetItem(str(data)))
        except mc.Error as e:
            print("Error")

    def botao38(self):
        try:
            mydb = mc.connect(host="localhost",user="root",password="xxxxxxxxx",database="bancodedados")
            mycursor = mydb.cursor()
            mycursor.execute("SELECT data, hora, CONCAT(battery_percent, ' %') FROM datahora INNER JOIN battery ON datahora.id = battery.id")
            result = mycursor.fetchall()
            self.tableWidget.setRowCount(0)
            for row_number, row_data in enumerate(result):
                self.tableWidget.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                    self.tableWidget.setItem(row_number, column_number, QTableWidgetItem(str(data)))
        except mc.Error as e:
            print("Error")

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(608, 393)
        MainWindow.setAutoFillBackground(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 20, 141, 16))
        self.label.setObjectName("label")
        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_6.setGeometry(QtCore.QRect(20, 50, 81, 23))
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_6.clicked.connect(self.botao6)
        self.pushButton_10 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_10.setGeometry(QtCore.QRect(20, 120, 81, 23))
        self.pushButton_10.setObjectName("pushButton_10")
        self.pushButton_10.clicked.connect(self.botao10)
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(10, 90, 111, 16))
        self.label_4.setObjectName("label_4")
        self.pushButton_17 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_17.setGeometry(QtCore.QRect(20, 190, 81, 23))
        self.pushButton_17.setObjectName("pushButton_17")
        self.pushButton_17.clicked.connect(self.botao17)
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(10, 160, 121, 16))
        self.label_7.setObjectName("label_7")
        self.pushButton_31 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_31.setGeometry(QtCore.QRect(20, 260, 81, 23))
        self.pushButton_31.setObjectName("pushButton_31")
        self.pushButton_31.clicked.connect(self.botao31)
        self.label_13 = QtWidgets.QLabel(self.centralwidget)
        self.label_13.setGeometry(QtCore.QRect(10, 230, 121, 16))
        self.label_13.setObjectName("label_13")
        self.pushButton_38 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_38.setGeometry(QtCore.QRect(20, 330, 81, 23))
        self.pushButton_38.setObjectName("pushButton_38")
        self.pushButton_38.clicked.connect(self.botao38)
        self.label_16 = QtWidgets.QLabel(self.centralwidget)
        self.label_16.setGeometry(QtCore.QRect(10, 300, 131, 16))
        self.label_16.setObjectName("label_16")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(170, 30, 411, 311))
        self.tableWidget.setAutoFillBackground(False)
        self.tableWidget.setAlternatingRowColors(True)
        self.tableWidget.setShowGrid(True)
        self.tableWidget.setWordWrap(True)
        self.tableWidget.setCornerButtonEnabled(True)
        self.tableWidget.setRowCount(10)
        self.tableWidget.setColumnCount(4)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.horizontalHeader().setVisible(False)
        self.tableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.tableWidget.horizontalHeader().setHighlightSections(True)
        self.tableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.tableWidget.horizontalHeader().setStretchLastSection(False)
        self.tableWidget.verticalHeader().setVisible(False)
        self.tableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.tableWidget.verticalHeader().setHighlightSections(True)
        self.tableWidget.verticalHeader().setSortIndicatorShown(False)
        self.tableWidget.verticalHeader().setStretchLastSection(False)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:10pt; font-weight:600;\">Uso da Memória (%)</span></p></body></html>"))
        self.pushButton_6.setText(_translate("MainWindow", "Histórico Geral"))
        self.pushButton_10.setText(_translate("MainWindow", "Histórico Geral"))
        self.label_4.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:10pt; font-weight:600;\">Uso da CPU (%)</span></p></body></html>"))
        self.pushButton_17.setText(_translate("MainWindow", "Histórico Geral"))
        self.label_7.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:10pt; font-weight:600;\">Uso da CPU (MHz)</span></p></body></html>"))
        self.pushButton_31.setText(_translate("MainWindow", "Histórico Geral"))
        self.label_13.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:10pt; font-weight:600;\">Uso do Disco (%)</span></p></body></html>"))
        self.pushButton_38.setText(_translate("MainWindow", "Histórico Geral"))
        self.label_16.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:10pt; font-weight:600;\">Uso da Bateria (%)</span></p></body></html>"))
        self.tableWidget.setSortingEnabled(False)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
